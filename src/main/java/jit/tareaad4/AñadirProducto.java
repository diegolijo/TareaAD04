package jit.tareaad4;

import Tablas.*;
import java.awt.Component;
import java.awt.Dialog;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.IOException;
import java.util.List;
import javax.persistence.Query;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JList;
import static jit.tareaad4.Metodos.*;
import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.Transaction;

public class AñadirProducto extends javax.swing.JFrame {

    /**
     * Creates new form AñadirProducto
     */
    public AñadirProducto() {
        initComponents();

        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);
        this.setModalExclusionType(Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        this.setTitle("Productos");

        formatearCombos();
        llenarComboProductos();
        llenarComboTendas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldNome = new javax.swing.JTextField();
        jButtonStock = new javax.swing.JButton();
        jTextFieldStock = new javax.swing.JTextField();
        jButtonAñadir = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jComboBoxProductos = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxTendas = new javax.swing.JComboBox<>();
        jButtonEliminar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextFieldNome.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jButtonStock.setText("Modificar stock");
        jButtonStock.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jButtonStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStockActionPerformed(evt);
            }
        });

        jTextFieldStock.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTextFieldStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldStockActionPerformed(evt);
            }
        });

        jButtonAñadir.setText("Añadir");
        jButtonAñadir.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jButtonAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAñadirActionPerformed(evt);
            }
        });

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jComboBoxProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxProductosMouseClicked(evt);
            }
        });

        jLabel2.setText("Unds");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("producto");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jComboBoxTendas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxTendasMouseClicked(evt);
            }
        });

        jButtonEliminar1.setText("Eliminar stock");
        jButtonEliminar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxTendas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBoxProductos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonEliminar))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 9, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonAñadir))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldStock, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonEliminar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonStock, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAñadir)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxTendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jButtonStock))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonEliminar1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStockActionPerformed

        if (isNumeric(jTextFieldStock.getText().toString())) {

            int unidades = Integer.parseInt(jTextFieldStock.getText().toString());

            Tenda tenda = (Tenda) jComboBoxTendas.getSelectedItem();
            Producto productoNuevo = (Producto) jComboBoxProductos.getSelectedItem();

            StockTenda unidadesTenda = new StockTenda(productoNuevo, tenda, unidades);

            tenda.addUnds(unidadesTenda);
            productoNuevo.addHoras(unidadesTenda);

            Transaction tran = null;

            try {

                Session session = HibernateUtil.getSesionFactory().openSession();

                tran = session.beginTransaction();

                session.saveOrUpdate(unidadesTenda);

                tran.commit();

                session.close();

                jTextFieldStock.setText("");
                jTextFieldStock.requestFocus();

            } catch (HibernateException e) {
                e.printStackTrace();
            }

        }

    }//GEN-LAST:event_jButtonStockActionPerformed

    private void jTextFieldStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldStockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldStockActionPerformed

    private void jButtonAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAñadirActionPerformed

        if (!jTextFieldNome.getText().equals("")) {

            Producto producto = new Producto(jTextFieldNome.getText());

            Transaction tran = null;

            try {

                Session session = HibernateUtil.getSesionFactory().openSession();
                tran = session.beginTransaction();
                session.save(producto);
                tran.commit();
                session.close();

            } catch (HibernateException e) {
                e.printStackTrace();
            }

            jTextFieldNome.setText("");
            jTextFieldNome.requestFocus();
            llenarComboProductos();

        }
    }//GEN-LAST:event_jButtonAñadirActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed

        try {

            if (jComboBoxProductos.getSelectedIndex() > 0) {
                //selecionamos un empleado del combo y la borramos
                Empregado empleado = (Empregado) jComboBoxProductos.getSelectedItem();

                Session session = HibernateUtil.getSesionFactory().openSession();

                Transaction tx = session.beginTransaction();
                session.delete(empleado);
                tx.commit();

                session.close();

            }
        } catch (HibernateException e) {
            e.printStackTrace();
        }

        llenarComboProductos();

    }//GEN-LAST:event_jButtonEliminarActionPerformed


    private void jComboBoxProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxProductosMouseClicked
        llenarComboProductos();
        buscarStock();
    }//GEN-LAST:event_jComboBoxProductosMouseClicked

    private void jComboBoxTendasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxTendasMouseClicked
        llenarComboTendas();
        buscarStock();
    }//GEN-LAST:event_jComboBoxTendasMouseClicked

    private void jButtonEliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminar1ActionPerformed

        if (isNumeric(jTextFieldStock.getText().toString())) {

            Tenda tenda = (Tenda) jComboBoxTendas.getSelectedItem();
            Producto productoNuevo = (Producto) jComboBoxProductos.getSelectedItem();

            StockTenda unidadesTenda = new StockTenda(productoNuevo, tenda, 0);

            Session session = HibernateUtil.getSesionFactory().openSession();

            Transaction tx = session.beginTransaction();
            session.delete(unidadesTenda);
            tx.commit();

            session.close();

            jTextFieldStock.setText("");
            jTextFieldStock.requestFocus();
        }


    }//GEN-LAST:event_jButtonEliminar1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AñadirProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AñadirProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AñadirProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AñadirProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AñadirProducto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAñadir;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonEliminar1;
    private javax.swing.JButton jButtonStock;
    private javax.swing.JComboBox<Producto> jComboBoxProductos;
    private javax.swing.JComboBox<Tenda> jComboBoxTendas;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldStock;
    // End of variables declaration//GEN-END:variables

    private void buscarStock() {

        jTextFieldStock.setText("");

        Tenda tenda = (Tenda) jComboBoxTendas.getSelectedItem();
        Producto producto = (Producto) jComboBoxProductos.getSelectedItem();

        if (tenda.getIdtenda() != 0 || producto.getIdProducto() != 0) {

            Session session = HibernateUtil.getSesionFactory().openSession();
            Query q1 = session.createQuery("SELECT x FROM StockTenda x Where  tenda=" + tenda.getIdtenda() + " And producto =" + producto.getIdProducto());

            StockTenda stockTenda = (StockTenda) q1.getSingleResult();
            session.close();

            if (stockTenda != null) {

                jTextFieldStock.setText(stockTenda.getUnidades() + "");
            }
        }
    }

    private void llenarComboProductos() {

        //llenamos el conboBox de las tiendas existentes
        jComboBoxProductos.removeAllItems();
        Producto Producto0 = new Producto("Selecciona Producto");
        jComboBoxProductos.addItem(Producto0);

        Session session = HibernateUtil.getSesionFactory().openSession();
        Query q1 = session.createQuery("SELECT x FROM Producto x ORDER BY idProducto");

        List<Producto> producto = q1.getResultList();

        if (producto.size() > 0) {
            for (Producto p : producto) {
                jComboBoxProductos.addItem(p);
            }
        }

        session.close();

    }

    private void llenarComboTendas() {

        //llenamos el conboBox de las tiendas existentes
        //llenamos el conboBox de las tiendas existentes
        jComboBoxTendas.removeAllItems();
        Tenda tenda0 = new Tenda("Selecciona Tenda", "", new Provincia());
        jComboBoxTendas.addItem(tenda0);

        String sql = "SELECT x FROM Tenda x ORDER BY idProvincia";

        Session session = HibernateUtil.getSesionFactory().openSession();
        Query q1 = session.createQuery(sql);
        List<Tenda> tenda = q1.getResultList();

        if (tenda.size() > 0) {
            for (Tenda t : tenda) {
                jComboBoxTendas.addItem(t);
            }
        }
        session.close();
    }

    private void formatearCombos() {

        //vista de los valores en los  combos
        jComboBoxTendas.setRenderer(new DefaultListCellRenderer() {

            @Override
            public Component getListCellRendererComponent(
                    JList list, Object value, int index,
                    boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index,
                        isSelected, cellHasFocus);

                if (value != null) {
                    Tenda tendas = (Tenda) value;
                    setText(tendas.getName());
                }
                return this;
            }
        });

        //vista de los valores en los  combos
        jComboBoxProductos.setRenderer(new DefaultListCellRenderer() {

            @Override
            public Component getListCellRendererComponent(
                    JList list, Object value, int index,
                    boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index,
                        isSelected, cellHasFocus);

                if (value != null) {
                    Producto producto = (Producto) value;
                    setText(producto.getName());
                }
                return this;
            }
        });
    }
}
