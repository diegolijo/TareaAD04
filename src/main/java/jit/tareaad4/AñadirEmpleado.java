/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jit.tareaad4;

import java.awt.Component;
import java.awt.Dialog;
import java.util.List;
import javax.persistence.Query;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JList;
import static jit.tareaad4.Metodos.*;
import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 *
 * @author jit
 */
public class AñadirEmpleado extends javax.swing.JFrame {

    /**
     * Creates new form AñadirEmpleado
     */
    public AñadirEmpleado() {

        initComponents();

        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);
        this.setModalExclusionType(Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        this.setTitle("Añadir novo Empregado");

        formatearCombo();
        llenarComboEmpleados();
        llenarComboTendas();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTextFieldApellidos = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jComboBoxEmpregados = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxTendas = new javax.swing.JComboBox<>();
        jTextFieldNome = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jTextFieldHoras = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Añadir");
        jButton1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextFieldApellidos.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTextFieldApellidos.setToolTipText("");

        jButton3.setText("Eliminar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBoxEmpregados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxEmpregadosMouseClicked(evt);
            }
        });

        jLabel1.setText("apellidos");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel2.setText("horas");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("nome");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jComboBoxTendas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxTendasMouseClicked(evt);
            }
        });

        jTextFieldNome.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jButton2.setText("Añadir Horas");
        jButton2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextFieldHoras.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTextFieldHoras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldHorasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextFieldApellidos)
                                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxTendas, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBoxEmpregados, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldHoras, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jTextFieldApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(32, 32, 32)
                .addComponent(jButton1)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxEmpregados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxTendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldHoras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (!jTextFieldApellidos.getText().equals("")  && !jTextFieldNome.getText().equals("")) {

            //       
            Empregado empleadoNuevo = new Empregado(jTextFieldNome.getText(), jTextFieldApellidos.getText());

            //   tenda.addHoras(empleadoNuevo);
            //   empleadoNuevo.addTenda((Tenda) jComboBox2.getSelectedItem());
            Transaction tran = null;

            try {

                Session session = HibernateUtil.getSesionFactory().openSession();
                tran = session.beginTransaction();
                session.save(empleadoNuevo);
                tran.commit();
                session.close();

            } catch (HibernateException e) {
                e.printStackTrace();
            }

            llenarComboEmpleados();

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        try {

            if (jComboBoxEmpregados.getSelectedIndex() > 0) {
                //selecionamos un empleado del combo y la borramos
                Empregado empleado = (Empregado) jComboBoxEmpregados.getSelectedItem();

                Session session = HibernateUtil.getSesionFactory().openSession();

                Transaction tx = session.beginTransaction();
                session.delete(empleado);
                tx.commit();

                session.close();

            }
        } catch (HibernateException e) {
            e.printStackTrace();
        }

        llenarComboEmpleados();


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        
    //    if(isNumeric(jTextFieldHoras.toString())){
            
      
    
           Tenda tenda = (Tenda) jComboBoxTendas.getSelectedItem();
           Empregado empleadoNuevo = (Empregado) jComboBoxEmpregados.getSelectedItem();

            tenda.addHoras(empleadoNuevo);
            empleadoNuevo.addTenda(tenda);

            Transaction tran = null;

            try {
                //Collemos a sesión de Hibernate
                Session session = HibernateUtil.getSesionFactory().openSession();
                //Comenzamos unha transacción
                tran = session.beginTransaction();

                //Gardamos o equipo
                session.update(empleadoNuevo);

                //Facemos un commit da transacción
                tran.commit();

                session.close();

            } catch (HibernateException e) {
                e.printStackTrace();
            }
            
            
            
 //       }
        
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBoxTendasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxTendasMouseClicked
        llenarComboTendas();
    }//GEN-LAST:event_jComboBoxTendasMouseClicked

    private void jComboBoxEmpregadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxEmpregadosMouseClicked
        llenarComboEmpleados();
    }//GEN-LAST:event_jComboBoxEmpregadosMouseClicked

    private void jTextFieldHorasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldHorasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldHorasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AñadirEmpleado.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AñadirEmpleado.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AñadirEmpleado.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AñadirEmpleado.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AñadirEmpleado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<Empregado> jComboBoxEmpregados;
    private javax.swing.JComboBox<Tenda> jComboBoxTendas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextFieldApellidos;
    private javax.swing.JTextField jTextFieldHoras;
    private javax.swing.JTextField jTextFieldNome;
    // End of variables declaration//GEN-END:variables

    private void llenarComboEmpleados() {

        //llenamos el conboBox de las tiendas existentes
        jComboBoxEmpregados.removeAllItems();
        Empregado empregado0 = new Empregado("Selecciona Empregado", "");
        jComboBoxEmpregados.addItem(empregado0);

        Session session = HibernateUtil.getSesionFactory().openSession();
        Query q1 = session.createQuery("SELECT x FROM Empregado x ORDER BY idEmpregado");

        List<Empregado> empregado = q1.getResultList();

        if (empregado.size() > 0) {
            for (Empregado c : empregado) {
                jComboBoxEmpregados.addItem(c);
            }
        }

        session.close();
    }

    private void llenarComboTendas() {

        //llenamos el conboBox de las tiendas existentes
        //llenamos el conboBox de las tiendas existentes
        jComboBoxTendas.removeAllItems();
        Tenda tenda0 = new Tenda("Selecciona Tenda", "", new Provincia());
        jComboBoxTendas.addItem(tenda0);

        String sql = "SELECT x FROM Tenda x ORDER BY idProvincia";

        Session session = HibernateUtil.getSesionFactory().openSession();
        Query q1 = session.createQuery(sql);
        List<Tenda> tenda = q1.getResultList();

        if (tenda.size() > 0) {
            for (Tenda t : tenda) {
                jComboBoxTendas.addItem(t);
            }
        }
        session.close();
    }

    private void formatearCombo() {

        //vista de los valores en los  combos
        jComboBoxTendas.setRenderer(new DefaultListCellRenderer() {

            @Override
            public Component getListCellRendererComponent(
                    JList list, Object value, int index,
                    boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index,
                        isSelected, cellHasFocus);

                if (value != null) {
                    Tenda tendas = (Tenda) value;
                    setText(tendas.getName());
                }
                return this;
            }
        });

        //vista de los valores en los  combos
        jComboBoxEmpregados.setRenderer(new DefaultListCellRenderer() {

            @Override
            public Component getListCellRendererComponent(
                    JList list, Object value, int index,
                    boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index,
                        isSelected, cellHasFocus);

                if (value != null) {
                    Empregado empregado = (Empregado) value;
                    setText(empregado.getName());
                }
                return this;
            }
        });
    }
}
